syntax = "proto3";

package mdcchain.quantumdata;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "mdcchain/quantumdata/params.proto";

option go_package = "mdc-chain/x/quantumdata/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams              (MsgUpdateParams             ) returns (MsgUpdateParamsResponse             );
  rpc CreateQuantumDataFragment (MsgCreateQuantumDataFragment) returns (MsgCreateQuantumDataFragmentResponse);
  rpc AccessQuantumDataFragment (MsgAccessQuantumDataFragment) returns (MsgAccessQuantumDataFragmentResponse);
  rpc UpdateAccessConditions    (MsgUpdateAccessConditions   ) returns (MsgUpdateAccessConditionsResponse   );
  rpc UpdateQuantumDataStatus   (MsgUpdateQuantumDataStatus  ) returns (MsgUpdateQuantumDataStatusResponse  );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                              "authority";
  option           (amino.name) = "mdcchain/x/quantumdata/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateQuantumDataFragment {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  string id          = 2;
  string data        = 3;
  string expiry      = 4;
  string accessLevel = 5;
}

message MsgCreateQuantumDataFragmentResponse {}

message MsgAccessQuantumDataFragment {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string id      = 2;
}

message MsgAccessQuantumDataFragmentResponse {}

message MsgUpdateAccessConditions {
  option (cosmos.msg.v1.signer) = "creator";
  string creator    = 1;
  string id         = 2;
  string conditions = 3;
}

message MsgUpdateAccessConditionsResponse {}

message MsgUpdateQuantumDataStatus {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string id        = 2;
  string newStatus = 3;
}

message MsgUpdateQuantumDataStatusResponse {}

